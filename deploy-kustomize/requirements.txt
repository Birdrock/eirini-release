Secrets:
- capi
    cc.crt
    cc.key
- capiCA
    cc.ca
- eirini
    eirini.crt
    eirini.key
- eiriniCA
    eirini.ca
- registry-credentials
    docker private registry credentials
    optional
    in our case, not needed if bits is not used
- ccUploader
    cc_uploader.crt
    cc_uploader.key
    note: this secret should be created in all app namespaces
    note2: this is only needed if native staging is used
- eirini
    eirini.crt
    eirini.key
    note: this secret should be created in all app namespaces
    note2: this is only needed if native staging is used
- cfCA
    ca.crt
    note: this secret should be created in all app namespaces
    note2: this is only needed if native staging is used
- doppler
    doppler.crt
    doppler.key
- dopplerCA
    doppler.ca
- nats
    password

serviceAccounts:
- application_service_account
    describe default roles, psps required for this to work
- staging_service_account
    describe default roles, psps required for this to work

roles:
- events:
    for each app namespace, the following should be converted to ClusterRole and ClusterRoleBinding:
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: eirini-events
          namespace: {{ .Values.opi.namespace }}
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: eirini-events
          namespace: {{ .Values.opi.namespace }}
        roleRef:
          kind: Role
          name: eirini-events
          apiGroup: rbac.authorization.k8s.io
        subjects:
        - kind: ServiceAccount
          name: eirini-events
          namespace: {{ .Release.Namespace }}

networkPolicy:
- app network policy
    deny app ingress
    probably should be managed by the networking team / capi / not us


Hardcode in eirini:
- opi.yml
    opi:
        registry_secret_name: registry-credentials
        eirini_address: "https://eirini_service_name.EIRINI_NAMESPACE.svc.cluster.local:8085"
            EIRINI_NAMESPACE can be an env variable in Eirini
            we can get it using the downward api

        cc_uploader_secret_name: ccUploaderSecret
        cc_uploader_cert_path: cc_uploader.crt
        cc_uploader_key_path: cc_uploader.key

        client_certs_secret_name: eiriniClientSecret
        client_cert_path: eirini.crt
        client_key_path: eirini.key

        ca_cert_secret_name: cfCA
        ca_cert_path: ca.crt

        cc_cert_path: "/workspace/jobs/opi/secrets/cc.crt"
        cc_key_path: "/workspace/jobs/opi/secrets/cc.key"
        cc_ca_path: "/workspace/jobs/opi/secrets/cc.ca"

        client_ca_path: "/workspace/jobs/opi/secrets/eirini.ca"
        server_cert_path: "/workspace/jobs/opi/secrets/eirini-server.crt"
        server_key_path: "/workspace/jobs/opi/secrets/eirini-server.key"

- metrics.yml
    loggergator_cert_path: "/etc/eirini/secrets/doppler.crt"
    loggregator_key_path: "/etc/eirini/secrets/doppler.key"
    loggregator_ca_path: "/etc/eirini/secrets/doppler.ca"

- events.yml
    cc_cert_path: "/etc/eirini/secrets/cc.crt"
    cc_key_path: "/etc/eirini/secrets/cc.key"
    cc_ca_path: "/etc/eirini/secrets/cc.ca"

- staging-reporter.yml
    eirini_cert_path: "/etc/eirini/secrets/eirini-client.crt"
    eirini_key_path: "/etc/eirini/secrets/eirini-client.key"
    ca_path: "/etc/eirini/secrets/eirini-client.ca"

- task-reporter.yml
    cc_cert_path: "/etc/eirini/secrets/cc.crt"
    cc_key_path: "/etc/eirini/secrets/cc.key"
    ca_path: "/etc/eirini/secrets/cc.ca"

- lrp-controller.yml
    eirini_cert_path: "/etc/eirini/secrets/eirini-client.crt"
    eirini_key_path: "/etc/eirini/secrets/eirini-client.key"
    ca_path: "/etc/eirini/secrets/eirini-client.ca"

    eirini_address: "https://eirini_service_name.EIRINI_NAMESPACE.svc.cluster.local:8085"
        EIRINI_NAMESPACE can be an env variable in Eirini
        we can get it using the downward api

General Notes:
- split different components into diffent directories (e.g. deploy/core, deploy/metrics, deploy/events etc)
    that way it's easier for cf-for-k8s or whoever to just install what they need
- concern: serviceName and service port duplication
    we have the service name and port in 2 places - the actual service && the eirini configmap
    we can't think of a way to remove this duplication without overcomplicating eirini itself
    we are not sure if it's a problem really, but something worth noting
- can't create CRBs becase subject requires a namespace for the ServiceAccount
