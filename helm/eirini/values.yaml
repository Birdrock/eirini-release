opi:
  # used when bits service is using ingress
  use_registry_ingress: false
  # set ingress_endoint when 'use_registry_ingress' is set to true
  ingress_endpoint: ~

  enable_rootfs_patcher: true
  rootfs_patcher_timeout: 2m

  enable_routing: true
  enable_logs: true
  enable_events: true
  enable_metrics: true
  enable_secret_smuggler: true

  registry_secret_name: registry-credentials
  disk_limit_mb: 2048
  namespace: eirini
  version: 0.0.0

nats:
  secretName: "secrets-2.16.4-2"
  passwordPath: "nats-password"

tls:
  opiCapiClient:
    secretName: "secrets-2.16.4-2"
    keyPath: "cc-server-crt-key"
    certPath: "cc-server-crt"
  opiServer:
    secretName: "secrets-2.16.4-2"
    certPath: "eirini-client-crt"
    keyPath: "eirini-client-crt-key"
  capi:
    secretName: "secrets-2.16.4-2"
    caPath: "internal-ca-cert"
  eirini:
    secretName: "secrets-2.16.4-2"
    caPath: "internal-ca-cert"
  eventsCapiClient:
    secretName: "secrets-2.16.4-2"
    keyPath: "cc-server-crt-key"
    certPath: "cc-server-crt"
  logsClient:
    secretName: "secrets-2.16.4-2"
    keyPath: "loggregator-agent-cert-key"
    certPath: "loggregator-agent-cert"
  logsServer:
    secretName: "secrets-2.16.4-2"
    caPath: "internal-ca-cert"
  metricsClient:
    secretName: "secrets-2.16.4-2"
    keyPath: "doppler-cert-key"
    certPath: "doppler-cert"
  metricsServer:
    secretName: "secrets-2.16.4-2"
    caPath: "internal-ca-cert"

# used only for secret smuggler to copy credentials to apps namespace
scfSecretName: "secrets-2.16.4-2"

services:
  loadbalanced: false
env:
  # Base domain of the SCF cluster.
  # Example: "my-scf-cluster.com"
  # used to get bits service URL if it is load balanced and not behind ingress
  DOMAIN: ~

# used to construct bits service URL if it is not load balanced and does not behind ingress
kube:
  external_ips: []

global:
  rootfs_version: v75.0.0
